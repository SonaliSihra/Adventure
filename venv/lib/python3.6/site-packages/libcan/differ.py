import sys
import os


class Differ(object):

    def __init__(self, areader, breader):
        self.areader = iter(areader)
        self.breader = iter(breader)

    def next_record(self, iter):
        try:
            return iter.next()
        except StopIteration:
            return None

    def __iter__(self):
        afile = self.next_record(self.areader)
        bfile = self.next_record(self.breader)

        while True:
            if afile is bfile is None:
                break

            elif afile is None:
                while True:
                    bfile.set_new()
                    yield bfile
                    bfile = self.next_record(self.breader)
                    if bfile is None:
                        break

            elif bfile is None:
                while True:
                    afile.set_deleted()
                    yield afile
                    afile = self.next_record(self.areader)
                    if afile is None:
                        break

            elif afile.name < bfile.name:
                afile.set_deleted()
                yield afile
                afile = self.next_record(self.areader)

            elif afile.name > bfile.name:
                bfile.set_new()
                yield bfile
                bfile = self.next_record(self.breader)

            elif afile.status != bfile.status:
                bfile.set_modified()
                yield bfile
                afile = self.next_record(self.areader)
                bfile = self.next_record(self.breader)

            else:
                yield afile
                afile = self.next_record(self.areader)
                bfile = self.next_record(self.breader)


